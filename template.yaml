AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Microservicio de Autenticaci√≥n basado en Spring WebFlux, PostgreSQL, Docker, ECS Fargate.
  Este template.yaml ser√° utilizado por GitHub Actions como orquestador de:
    - Infraestructura (Terraform)
    - Imagen Docker (Dockerfile)
    - Despliegue a ECR y ECS

Globals:
  Function:
    Timeout: 20
    MemorySize: 512
    Tracing: Active
    LoggingConfig:
      LogFormat: JSON
  Api:
    TracingEnabled: true

Resources:

  # üß± (1) Infraestructura: Terraform
  # GitHub Actions ejecutar√° Terraform para crear:
  # - VPC, Subnets, Security Groups
  # - ECS Cluster + Service + TaskDefinition
  # - RDS PostgreSQL (opcional)
  # - IAM roles
  #
  # Terraform se ejecutar√° en el workflow de GitHub Actions, no aqu√≠ directamente.

  # üê≥ (2) Imagen Docker
  # El Dockerfile se encuentra en la ra√≠z del microservicio
  # GitHub Actions construir√° la imagen y la enviar√° a Amazon ECR

  # üì¶ (3) Repositorio ECR (si se desea crear desde aqu√≠)
  DockerImageRepository:
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: microservicio-autenticacion-webflux
      ImageTagMutability: MUTABLE
      LifecyclePolicy:
        LifecyclePolicyText: >
          {
            "rules": [
              {
                "rulePriority": 1,
                "description": "Eliminar im√°genes antiguas",
                "selection": {
                  "tagStatus": "any",
                  "countType": "imageCountMoreThan",
                  "countNumber": 10
                },
                "action": {
                  "type": "expire"
                }
              }
            ]
          }

  # üöÄ (4) ECS Cluster y Service ser√°n creados por Terraform

  # üëÅÔ∏è (5) Monitoreo
  ApplicationResourceGroup:
    Type: AWS::ResourceGroups::Group
    Properties:
      Name:
        Fn::Sub: ApplicationInsights-SAM-${AWS::StackName}
      ResourceQuery:
        Type: CLOUDFORMATION_STACK_1_0

  ApplicationInsightsMonitoring:
    Type: AWS::ApplicationInsights::Application
    Properties:
      ResourceGroupName:
        Ref: ApplicationResourceGroup
      AutoConfigurationEnabled: 'true'

Outputs:
  # üîç URL final de ECS (ej: ALB DNS name), definirlo en Terraform
  AplicacionEndpoint:
    Description: URL final del microservicio autenticaci√≥n en ECS
    Value: "http://alb-o-dns-ecs.autenticacion.com"
