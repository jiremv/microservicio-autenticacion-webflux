name: Deploy microservicio-autenticacion-webflux

on:
  push:
    branches: [main]

jobs:
  deploy:
    name: Build, Push Docker Image & Deploy to ECS with Terraform
    runs-on: ubuntu-latest

    env:
      AWS_REGION: us-east-1
      ECR_REPOSITORY: microservicio-autenticacion-webflux
      ECS_CLUSTER: cluster-autenticacion
      ECS_SERVICE: servicio-autenticacion
      IMAGE_TAG: ${{ github.sha }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/github-actions-role
          aws-region: ${{ env.AWS_REGION }}

      # ---------- Docker ----------
      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build Docker image
        run: |
          docker build -t $ECR_REPOSITORY:$IMAGE_TAG .
          docker tag $ECR_REPOSITORY:$IMAGE_TAG ${{ steps.login-ecr.outputs.registry }}/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Push Docker image to ECR
        run: |
          docker push ${{ steps.login-ecr.outputs.registry }}/$ECR_REPOSITORY:$IMAGE_TAG

      # ---------- Terraform ----------
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        working-directory: terraform
        run: terraform init

      - name: Terraform Validate
        working-directory: terraform
        run: terraform validate

      - name: Terraform Apply
        working-directory: terraform
        run: terraform apply -auto-approve -var="image_tag=${{ env.IMAGE_TAG }}" -var="ecr_url=${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}"

      - name: Output ALB URL
        working-directory: terraform
        run: terraform output alb_url
